import numpy as np
import matplotlib.pyplot as plt

class HeatmapGenerator:
    def __init__(self, data, cmap='Oranges'):
        self.data = np.array(data)
        if self.data.ndim != 2:
            raise ValueError("Los datos deben ser una matriz bidimensional")
        self.data = np.where(self.data == 0, np.nan, self.data)
        self.cmap = cmap

    def plot(self, annotate=False):
        plt.imshow(self.data, cmap=self.cmap, interpolation='nearest')
        plt.colorbar()
        if annotate:
            for i in range(self.data.shape[0]):
                for j in range(self.data.shape[1]):
                    if not np.isnan(self.data[i, j]):
                        plt.text(j, i, f'{self.data[i, j]:.2f}', ha='center', va='center')

        plt.show()
np.random.seed(2)
cuadricula_35x35 = [
[0.1, 0.3, 0.5, 0.7, 0, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6],
    [0.6, 0.8, 0.1, 0, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2],
    [0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9],
[0.1, 0.3, 0.5, 0.7, 0.2, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6],
    [0.6, 0.8, 0.1, 0.2, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2],
    [0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9],
    [0.2, 0.1, 0.9, 0.5, 0.4, 0.7, 0.3, 0.9, 0.2, 0.1, 0.8, 0.7, 0.5, 0.3, 0.9, 0.4, 1, 0.1, 0.6, 0.3, 0.7, 1, 0.3, 0.8, 0.2, 1, 0.4, 0.9, 0.5, 0.2, 1, 0.7, 0.6, 0.3, 0.5],
    [0.1, 0.7, 0.4, 0.2, 0.3, 0.8, 0.6, 0.5, 0.3, 0.7, 0.1, 0.2, 0.9, 0.3, 0.8, 0.4, 1, 0.5, 0.9, 0.2, 0.4, 0.6, 0.3, 0.5, 0.7, 0.2, 0.8, 0.4, 0.5, 0.6, 0.1, 1, 0.3, 0.7, 0.4],
    [0.3, 0.9, 0.6, 0.4, 0.1, 0.8, 0.7, 0.5, 0.4, 0.3, 0.8, 0.5, 0.2, 0.6, 0.3, 0.1, 1, 0.4, 0.8, 0.3, 0.5, 0.9, 0.4, 0.6, 0.1, 0.2, 1, 0.3, 0.8, 0.4, 0.2, 1, 0.7, 0.3, 0.5],
    [0.8, 0.3, 0.5, 0.4, 0.2, 0.6, 0.7, 0.5, 0.3, 0.1, 0.4, 0.2, 0.9, 0.3, 0.7, 0.1, 1, 0.4, 0.9, 0.3, 0.6, 0.2, 0.3, 0.8, 0.5, 0.3, 0.9, 0.6, 0.5, 0.4, 0.7, 1, 0.8, 0.4, 0.6],
    [0.6, 0.9, 0.2, 0.5, 0.3, 0.1, 0.7, 0.3, 0.8, 0.4, 0.1, 0.9, 0.2, 0.7, 0.3, 0.6, 1, 0.4, 0.5, 0.3, 0.9, 0.6, 0.8, 0.2, 0.4, 0.7, 0.9, 0.1, 0.3, 0.5, 0.7, 1, 0.4, 0.8, 0.3],
    [0.5, 0.1, 0.6, 0.8, 0.2, 0.7, 0.9, 0.4, 0.3, 0.5, 0.7, 0.1, 0.6, 0.3, 0.4, 0.9, 1, 0.3, 0.7, 0.2, 0.8, 0.5, 0.3, 0.6, 0.1, 0.7, 0.4, 0.9, 0.2, 0.3, 0.5, 1, 0.8, 0.6, 0.3],
    [0.7, 0.5, 0.3, 0.9, 0.2, 0.4, 0.8, 0.6, 1, 0.2, 0.4, 0.8, 0.1, 0.3, 0.5, 0.2, 1, 0.4, 0.3, 0.8, 0.2, 0.3, 1, 0.5, 0.7, 1, 0.9, 0.4, 0.3, 0.8, 1, 0.6, 0.3, 0.5, 0.4],
    [0.1, 0.3, 0.5, 0.7, 0.2, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6],
    [0.6, 0.8, 0.1, 0.2, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2],
    [0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9],
    [0.2, 0.1, 0.9, 0.5, 0.4, 0.7, 0.3, 0.9, 0.2, 0.1, 0.8, 0.7, 0.5, 0.3, 0.9, 0.4, 1, 0.1, 0.6, 0.3, 0.7, 1, 0.3, 0.8, 0.2, 1, 0.4, 0.9, 0.5, 0.2, 1, 0.7, 0.6, 0.3, 0.5],
    [0.1, 0.7, 0.4, 0.2, 0.3, 0.8, 0.6, 0.5, 0.3, 0.7, 0.1, 0.2, 0.9, 0.3, 0.8, 0.4, 1, 0.5, 0.9, 0.2, 0.4, 0.6, 0.3, 0.5, 0.7, 0.2, 0.8, 0.4, 0.5, 0.6, 0.1, 1, 0.3, 0.7, 0.4],
    [0.3, 0.9, 0.6, 0.4, 0.1, 0.8, 0.7, 0.5, 0.4, 0.3, 0.8, 0.5, 0.2, 0.6, 0.3, 0.1, 1, 0.4, 0.8, 0.3, 0.5, 0.9, 0.4, 0.6, 0.1, 0.2, 1, 0.3, 0.8, 0.4, 0.2, 1, 0.7, 0.3, 0.5],
    [0.8, 0.3, 0.5, 0.4, 0.2, 0.6, 0.7, 0.5, 0.3, 0.1, 0.4, 0.2, 0.9, 0.3, 0.7, 0.1, 1, 0.4, 0.9, 0.3, 0.6, 0.2, 0.3, 0.8, 0.5, 0.3, 0.9, 0.6, 0.5, 0.4, 0.7, 1, 0.8, 0.4, 0.6],
    [0.6, 0.9, 0.2, 0.5, 0.3, 0.1, 0.7, 0.3, 0.8, 0.4, 0.1, 0.9, 0.2, 0.7, 0.3, 0.6, 1, 0.4, 0.5, 0.3, 0.9, 0.6, 0.8, 0.2, 0.4, 0.7, 0.9, 0.1, 0.3, 0.5, 0.7, 1, 0.4, 0.8, 0.3],
    [0.5, 0.1, 0.6, 0.8, 0.2, 0.7, 0.9, 0.4, 0.3, 0.5, 0.7, 0.1, 0.6, 0.3, 0.4, 0.9, 1, 0.3, 0.7, 0.2, 0.8, 0.5, 0.3, 0.6, 0.1, 0.7, 0.4, 0.9, 0.2, 0.3, 0.5, 1, 0.8, 0.6, 0.3],
    [0.7, 0.5, 0.3, 0.9, 0.2, 0.4, 0.8, 0.6, 1, 0.2, 0.4, 0.8, 0.1, 0.3, 0.5, 0.2, 1, 0.4, 0.3, 0.8, 0.2, 0.3, 1, 0.5, 0.7, 1, 0.9, 0.4, 0.3, 0.8, 1, 0.6, 0.3, 0.5, 0.4],
    [0.1, 0.3, 0.5, 0.7, 0.2, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6],
    [0.6, 0.8, 0.1, 0.2, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2],
    [0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9, 0.2, 0.4, 0.6, 0.8, 0.1, 0.3, 0.5, 0.7, 0.9],
    [0.2, 0.1, 0.9, 0.5, 0.4, 0.7, 0.3, 0.9, 0.2, 0.1, 0.8, 0.7, 0.5, 0.3, 0.9, 0.4, 1, 0.1, 0.6, 0.3, 0.7, 1, 0.3, 0.8, 0.2, 1, 0.4, 0.9, 0.5, 0.2, 1, 0.7, 0.6, 0.3, 0.5],
    [0.1, 0.7, 0.4, 0.2, 0.3, 0.8, 0.6, 0.5, 0.3, 0.7, 0.1, 0.2, 0.9, 0.3, 0.8, 0.4, 1, 0.5, 0.9, 0.2, 0.4, 0.6, 0.3, 0.5, 0.7, 0.2, 0.8, 0.4, 0.5, 0.6, 0.1, 1, 0.3, 0.7, 0.4],
    [0.3, 0.9, 0.6, 0.4, 0.1, 0.8, 0.7, 0.5, 0.4, 0.3, 0.8, 0.5, 0.2, 0.6, 0.3, 0.1, 1, 0.4, 0.8, 0.3, 0.5, 0.9, 0.4, 0.6, 0.1, 0.2, 1, 0.3, 0.8, 0.4, 0.2, 1, 0.7, 0.3, 0.5],
    [0.8, 0.3, 0.5, 0.4, 0.2, 0.6, 0.7, 0.5, 0.3, 0.1, 0.4, 0.2, 0.9, 0.3, 0.7, 0.1, 1, 0.4, 0.9, 0.3, 0.6, 0.2, 0.3, 0.8, 0.5, 0.3, 0.9, 0.6, 0.5, 0.4, 0.7, 1, 0.8, 0.4, 0.6],
    [0.6, 0.9, 0.2, 0.5, 0.3, 0.1, 0.7, 0.3, 0.8, 0.4, 0.1, 0.9, 0.2, 0.7, 0.3, 0.6, 1, 0.4, 0.5, 0.3, 0.9, 0.6, 0.8, 0.2, 0.4, 0.7, 0.9, 0.1, 0.3, 0.5, 0.7, 1, 0.4, 0.8, 0.3],
    [0.5, 0.1, 0.6, 0.8, 0.2, 0.7, 0.9, 0.4, 0.3, 0.5, 0.7, 0.1, 0.6, 0.3, 0.4, 0.9, 1, 0.3, 0.7, 0.2, 0.8, 0.5, 0.3, 0.6, 0.1, 0.7, 0.4, 0.9, 0.2, 0.3, 0.5, 1, 0.8, 0.6, 0.3],
    [0.7, 0.5, 0.3, 0.9, 0.2, 0.4, 0.8, 0.6, 1, 0.2, 0.4, 0.8, 0.1, 0.3, 0.5, 0.2, 1, 0.4, 0.3, 0.8, 0.2, 0.3, 1, 0.5, 0.7, 1, 0.9, 0.4, 0.3, 0.8, 1, 0.6, 0.3, 0.5, 0.4],
    [0.5, 0.1, 0.6, 0.8, 0.2, 0.7, 0.9, 0.4, 0.3, 0.5, 0.7, 0.1, 0.6, 0.3, 0.4, 0.9, 1, 0.3, 0.7, 0.2, 0.8, 0.5, 0.3, 0.6, 0.1, 0.7, 0.4, 0.9, 0.2, 0.3, 0.5, 1, 0.8, 0.6, 0.3],
    [0.7, 0.5, 0.3, 0.9, 0.2, 0.4, 0.8, 0.6, 1, 0.2, 0.4, 0.8, 0.1, 0.3, 0.5, 0.2, 1, 0.4, 0.3, 0.8, 0.2, 0.3, 1, 0.5, 0.7, 1, 0.9, 0.4, 0.3, 0.8, 1, 0.6, 0.3, 0.5, 0.4]
]
heatmap = HeatmapGenerator(cuadricula_35x35, cmap='Oranges')
heatmap.plot(annotate=False)